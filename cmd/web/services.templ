package main

import "fmt"
import "github.com/haidousm/delne/internal/models"

templ header(title string) {
	<header>
		<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
			<h1 class="text-3xl font-bold leading-tight tracking-tight text-gray-900">{ title }</h1>
		</div>
	</header>
}

templ navbar(items []string, current string) {
	<nav class="border-b border-gray-200 bg-white">
		<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
			<div class="flex h-16 justify-between">
				<div class="flex">
					<div class="flex flex-shrink-0 items-center"></div>
					<div class="hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8">
						for _, item := range items {
							if item == current {
								<a href="#" class="border-indigo-500 text-gray-900 inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium" aria-current="page">{ item }</a>
							} else {
								<a href="#" class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium">{ item }</a>
							}
						}
					</div>
				</div>
				<div class="hidden sm:ml-6 sm:flex sm:items-center">
					<button type="button" class="relative rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
						<span class="absolute -inset-1.5"></span>
						<span class="sr-only">View notifications</span>
						<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
							<path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0"></path>
						</svg>
					</button>
					<div class="relative ml-3">
						<div>
							<button type="button" class="relative flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
								<span class="absolute -inset-1.5"></span>
								<span class="sr-only">Open user menu</span>
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</nav>
}

templ servicesTable(services []*models.Service, images []*models.Image, showForm bool) {
	<div id="services-table">
		<div class="px-4 sm:px-6 lg:px-8">
			<div class="sm:flex sm:items-center">
				<div class="sm:flex-auto">
					<h1 class="text-base font-semibold leading-6 text-gray-900">Services</h1>
					// <p class="mt-2 text-sm text-gray-700">A list of all the users in your account including their name, title, email and role.</p>
				</div>
				<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
					<button type="button" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600" hx-get="/admin/service/new" hx-target="#services-table">Add service</button>
				</div>
			</div>
			<div class="mt-8 flow-root">
				<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
					<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
						<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
							<table class="min-w-full divide-y divide-gray-300 bg-gray-50">
								<thead class="bg-gray-50">
									<tr>
										<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 w-[400px]">Name</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 w-[400px]">Image</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 w-[400px]">Hosts</th>
										<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6"></th>
										<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6"></th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 bg-white">
									if showForm {
										@createServiceFormRow()
									}
									for _, service := range(services) {
										for _, image := range(images) {
											if image.ID == *service.ImageID {
												@servicesTableRow(*service, *image)
											}
										}
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ startServiceButton(service models.Service) {
	<button
		class="rounded-md bg-green-600 p-2 text-white hover:bg-green-900 disabled:cursor-not-allowed disabled:bg-gray-600 disabled:hover:bg-gray-600"
		hx-post={ templ.EscapeString(fmt.Sprintf("/admin/api/services/%s/start", service.Name)) }
	>
		Start Service
	</button>
}

templ stopServiceButton(service models.Service) {
	<button
		class="rounded-md bg-red-600 p-2 text-white hover:bg-red-900 disabled:cursor-not-allowed disabled:bg-gray-600 disabled:hover:bg-gray-600"
		hx-post={ templ.EscapeString(fmt.Sprintf("/admin/api/services/%s/stop", service.Name)) }
	>
		Stop Service
	</button>
}

templ servicesTableRow(service models.Service, image models.Image) {
	<tr hx-target="this" hx-swap="outerHTML">
		<td
			class={
				"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6 w-[400px] border-l-[32px]",
				templ.KV("border-gray-600", service.Status == models.CREATED || service.Status == models.PULLING),
				templ.KV("border-green-600", service.Status == models.RUNNING),
				templ.KV("border-red-600", service.Status == models.STOPPED || service.Status == models.CREATED),
			}
		>{ service.Name }</td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 w-[400px]">{ image.String() }</td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 w-[400px]">{ service.Hosts[0] }</td>
		<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
			if service.Status == models.RUNNING {
				@stopServiceButton(service)
			} else {
				@startServiceButton(service)
			}
		</td>
		<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
			// <a href={ templ.SafeURL(fmt.Sprintf("/admin/services/%s/edit", service.Name)) } class="disabled:text-indigo-600 disabled:hover:text-indigo-900 bg-slate-50 text-slate-500 border-slate-200 cursor-not-allowed pointer-events-none" hx-boost="true">Edit</a>
			<a href="#" class="text-red-600 hover:text-red-900 ml-4" hx-delete={ templ.EscapeString(fmt.Sprintf("/admin/api/services/%s", service.Name)) } hx-confirm="Are you sure you want to delete this service?">Delete</a>
		</td>
	</tr>
}

templ createServiceFormRow() {
	<tr id="create-service-row">
		<form>
			<td class="whitespace-nowrap text-sm font-medium text-gray-900 sm:pl-6 w-[400px]">
				<input type="text" name="name" class="rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="enter name"/>
			</td>
			<td class="whitespace-nowrap text-sm text-gray-500 w-[400px]">
				<input type="text" name="image" class="rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="enter image"/>
			</td>
			<td class="whitespace-nowrap text-sm text-gray-500 w-[400px]">
				<input type="text" name="host" class="rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="enter host"/>
			</td>
			<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
				<a href="/admin/services" class="text-gray-600 hover:text-gray-900 mr-4" hx-boost="true">Cancel</a>
				<button class="text-indigo-600 hover:text-indigo-900" hx-post="/admin/api/services" hx-include="closest tr" hx-target="#create-service-row" hx-swap="outerHTML" hx-replace-url="/admin/services">Save</button>
			</td>
		</form>
	</tr>
}

// templ editServiceFormRow(service *docker.Service) {
// 	<tr id="edit-service-row">
// 		<form>
// 			<td class="whitespace-nowrap text-sm font-medium text-gray-900 sm:pl-6 w-[400px]">{ service.Name }</td>
// 			<td class="whitespace-nowrap text-sm text-gray-500 w-[400px]"><input type="text" name="target" class="rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" value={ target }/></td>
// 			<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
// 				<a href="/admin/proxies" class="text-gray-600 hover:text-gray-900 mr-4" hx-boost="true">Cancel</a>
// 				<button class="text-indigo-600 hover:text-indigo-900" hx-put={ fmt.Sprintf("/admin/api/proxies/%s", host) } hx-include="closest tr" hx-target="#edit-proxy-row" hx-swap="outerHTML" hx-replace-url="/admin/proxies">Save</button>
// 			</td>
// 		</form>
// 	</tr>
// }
templ ServicesDashboard(services []*models.Service, images []*models.Image) {
	<html class="h-full">
		<head>
			<title>Delne</title>
			<script src="https://cdn.tailwindcss.com/3.4.3"></script>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
		</head>
		<body class="h-full">
			<div class="min-h-full">
				@navbar([]string{"Dashboard"}, "Dashboard")
				<div class="py-10">
					// @header("Dashboard")
					<main>
						<div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
							@servicesTable(services, images, false)
						</div>
					</main>
				</div>
			</div>
		</body>
	</html>
}
